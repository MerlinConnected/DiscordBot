import os
from dotenv import load_dotenv
import discord
from discord.ui import Select, View
from discord.ext import commands

load_dotenv() # Load the .env file

TOKEN = os.getenv("DISCORD_TOKEN") # Get the token from the .env file

bot = commands.Bot(command_prefix='{', intents=discord.Intents.all()) 

@bot.event 
async def on_ready(): 
    print(f"{bot.user.name} has connected to Discord!") # Prints "Bot has connected to Discord!"
    await bot.change_presence(activity=discord.Game(name="Je suis un sale connard qui marche pas")) # Change the bot's activity

@bot.command()
async def menus(ctx): 
    budget = Select( 
        placeholder="Selectionnez votre budget",
        options=[
            discord.SelectOption(
                label="Petite faim",
                emoji="üçü", 
                description="De 800 √† 1000‚Ç¨"),
            discord.SelectOption(
                label="Grosse faim", 
                emoji="üçî", 
                description="De 1000 √† 1500‚Ç¨"),
            discord.SelectOption(
                label="Petage de bide", 
                emoji="üçó", 
                description="De 1500 √† 2000‚Ç¨")
        ]
    )

    async def budget_callback(interaction):
        if interaction.data["values"][0] == 'Petite faim':
            await interaction.response.send_message(f"Alors comme √ßa on a une petite faim")
        return interaction.data["values"][0]
    
    usage = Select(
        placeholder="Selectionnez votre utilisation",
        options=[
            discord.SelectOption(
                label="Secretaire",
                emoji="üìù",
                description="Bureautique simple"),
            discord.SelectOption(
                label="Gamer",
                emoji="üéÆ",
                description="Tout sauf fotrnite"),
            discord.SelectOption(
                label="Machine de travail",
                emoji="üîß",
                description="Besoin de fiabilit√©e")
            ]
        )

    async def usage_callback(interaction):
        if interaction.data["values"][0] == 'Secretaire':
            await interaction.response.send_message(f"Alors comme √ßa on √©crit pas vite")

    usage.callback = usage_callback
    budget.callback = budget_callback
    print(budget.callback)
    view = View()
    view.add_item(budget)
    view.add_item(usage)
    await ctx.send("Des configurations de pc mise √† jour r√©guli√®rement pour vous !", view=view)

bot.run(TOKEN)
